<?xml version="1.0" encoding="UTF8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--过滤静态文件 -->
    <mvc:default-servlet-handler/>
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.earphone.clone"/>
    <!-- 添加注解驱动 -->
    <mvc:annotation-driven>
        <!-- 消息转换器,解决@RequestMapping乱码 -->
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value="text/html;charset=UTF-8"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- 打开Spring的AOP -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <mvc:interceptors>
        <!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
        <bean class="com.earphone.clone.interceptor.LoginInterceptor"/>
        <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的,用mvc:mapping声明请求地址 -->
        <!-- <mvc:interceptor> <mvc:mapping path="" /> <bean class="com.nuoshenggufen.ecaifinance.core.interceptor.LoginInterceptor" /> </mvc:interceptor> -->
    </mvc:interceptors>

    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
                <value>text/xml;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <bean id="mappingXmlHttpMessageConverter" class="org.springframework.http.converter.xml.SourceHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/xml;charset=UTF-8</value>
                <value>text/xml;charset=UTF-8</value>
                <value>application/*-xml;charset=UTF-8</value>
                <value>text/*-xml;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!-- 全局异常捕获 -->
    <bean class="com.earphone.common.resolver.GlobalExceptionResolver"/>

    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <!-- JSON转换器 -->
                <ref bean="mappingJacksonHttpMessageConverter"/>
                <ref bean="mappingXmlHttpMessageConverter"/>
            </list>
        </property>
    </bean>
    <!-- freemarker的配置 -->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/view/"/>
        <property name="defaultEncoding" value="utf-8"/>
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">0</prop>
                <prop key="locale">zh_CN</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="date_format">yyyy-MM-dd</prop>
                <prop key="number_format">#.##</prop>
                <prop key="default_encoding">UTF-8</prop>
                <prop key="classic_compatible">true</prop>
                <!-- <prop key="auto_import">/common/lib.ftl as lib</prop> -->
                <!-- 配置自定义的freemarker异常处理 -->
                <prop key="template_exception_handler">com.earphone.common.resolver.GlobalExceptionResolver</prop>
            </props>
        </property>
    </bean>
    <!-- FreeMarker视图解析 如返回student。。在这里配置后缀名ftl和视图解析器。。 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
        <property name="cache" value="false"/>
        <property name="suffix" value=".html"/>
        <property name="contentType" value="text/html;charset=utf-8"/>
        <property name="requestContextAttribute" value="request"/>
        <property name="exposeRequestAttributes" value="true"/>
        <property name="exposeSessionAttributes" value="true"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
    </bean>
</beans>